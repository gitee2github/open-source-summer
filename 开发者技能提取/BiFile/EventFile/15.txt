RT-Thread Smart提供了一部分的跨进程通信机制，以channel & shared memory方式进行通信（IPC，Inter-Process Communication，进程间通信）。通信机制涉及到整个系统中的运行效率，特别是当一些系统服务运行在用户态，用户态应用程序需要使用这些基础能力的时候。
这个项目希望在RT-Thread Smart的多核环境下（例如树莓派4B的32位环境或 64位环境），完成对IPC典型通信流程的量化测量并在TraceView上进行可视化展示，给出优化方案。最后通过用户态运行网络协议栈，用户态应用程序执行iperf3的方式，来提升系统调用、IPC整体性能状况。

测量现有IPC机制在单核和多核环境的开销和最坏执行时间，找到其潜在改进点，并提出设计和使用上的相关建议；
将兼容现有内核架构的优化措施合并到RT-Thread Smart代码仓库，并形成一份设计方案的文档

良好的沟通与交流能力
清晰理解CPU架构寄存器级情况，了解模式切换时涉及的栈，变量变化情况
良好的动手能力，静态汇编，C语言，能够完成长链条深入挖掘信息
如果可能，熟悉网络协议栈和RT-Smart内核