可编程控制器技术作为一种以微处理器及其存储器为控制中心的自动化装置,在工业自动化控制领域发挥着越来越重要的作用。随着工业制造技术的不断进步以及过程的不断复杂化,对所需的控制程序提出了新的要求。传统的PLC编程模式方式（指令表语言和梯形语言等）功能已经达到极限，长期以来PLC的研制走的是一条专用化的道路，不同厂商使用不同的编程规则,使得在其获得成功的同时也带来了许多不便。 
IEC61131-3作为第一个为工业自动化控制系统的软件设计提供标准化编程语言的国际标准极大地改进了工业控制系统的编程软件质量,提高了软件开发效率。它定义的一系列图形化语言和文本语言,不仅对系统集成商和系统工程师的编程带来很大的方便,而且对最终用户同样会带来很大的方便。 
本项目基于IEC61131-3标准对PLC系统的代码编译部分进行设计与实现，主要任务分为三个部分：一是文本处理部分，主要内容是设计PLC结构化文本语言的BNF范式，并使用自动化生成工具正确地生成AST树。二是静态检查部分，主要内容为设计符号表、作用域等结构，并对AST树进行处理，输出中间表达结构。三是翻译部分，主要任务为设计运行时支持库，并根据此支持库提供的内容，使用上一步的中间表达结构生成目标文件。

静态检查程序
符号表、作用域结构设计
遍历AST树并正确生成中间表达结构
翻译程序
由中间结构生成目标语言的程序
目标语言的运行时支持库

生成的目标语言可以阅读，代码意义明确
最终生成的程序运行速度较优
运行支持库可拓展，代码意义明确
静态语义检查提供供调试使用的接口
生成的目标语言运行结果与源语言无差