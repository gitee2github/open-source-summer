可靠性和可用性是每个 MQ 系统最重要的两个特性，通过Message Track Trace我们应该查看完整的消息链接，快速找到进程消息传递失败的根本原因，并且可以查询到很多参数值，例如发送成本时间、消费成本时间、存储在 broker 中的时间等等，当服务端压力过大或者存储紧张的时候，我们可以通过命令临时关闭轨迹消息进行降级。Apache RocketMQ在RIP-6中已经实现了消息轨迹的功能，针对CPP客户端，基本的轨迹功能已经实现，需要进一步实现临时降级策略。本题目的目的就是要在CPP客户端实现轨迹降级策略，主要包括：
 
1.学习Apache RocketMQ知识，详细了解RocketMQ原理、使用方式
2.掌握Apache RocketMQ中轨迹消息特性原理和代码
3.在社区中提交Issue，完成相关代码，review后被社区合并

文档类
详细设计文档
测试报告
使用说明书
代码类
官方仓库提交Issue
官方仓库提交实现代码PR
官方仓库提交单元测试用例代码PR

掌握Apache RocketMQ知识，详细了解RocketMQ原理、使用方式
掌握Apache RocketMQ中轨迹消息特性原理和代码
熟练掌握和使用C/CPP，熟悉Java语言
熟悉Linux，RPC通信等基础知识和原理