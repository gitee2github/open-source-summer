分布式训练作业中通常涉及到多机通信，不同的训练框架&训练角色配置对应不同的通信策略，比如：
1) PS-Worker：PS与Worker之间会以AllReduce的形式通信，PS之间不会互相通信；或者PS-Worker有分片通信的策略，单个PS与某些Worker交换参数；
2) 纯Worker：以RingAllReduce的方式环状通信；
3) Master-Worker：单Master节点与多个Worker节点之间通信；
...
针对不同的作业及其通信策略，如果能将互相通信的Pod调度在同一台机器上，用本地通信代替跨机通信提升通信效率，可以达成以下目标：
1) 定义出不同的通信策略，用户可以指定，也可以在开启featuregates后注入默认值；
2) 针对每个Job，构建对应的亲和性方案，创建每个Pod时分别注入不同的亲和性规则；
3) 对比开启前后的训练效果，对通信密集的作业是否有提升，给出测评报告；

定义出不同的通信策略，用户可以指定，也可以在开启featuregates后注入默认值（合理的用户API和使能开关）；
针对每个Job，构建对应的亲和性方案，创建每个Pod时分别注入不同的亲和性规则；
对比开启前后的训练效果，对通信密集的作业是否有提升，给出测评报告；

了解Kubernetes基本原理，KubeDL的整体架构和工作原理
对深度学习框架的通信模式有基本的了解，以及对优化手段也有明确的认知
能够根据设计方案，有优秀的编码能力和单测覆盖度，最后也能根据实现结果给出详细的测评报告