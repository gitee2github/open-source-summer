openEuler gopher[1] 用于采集OS进程/线程粒度运行态数据（比如网络TCP数据、磁盘I/O数据等），gopher所采集的数据、应用自身的KPI数据两者通过特征训练可以得出不同应用对应不同特征向量。
特征向量的准确性，可以直接决定应用性能卡顿故障识别的准确度。传统的手段：应用性能卡顿问题通常需要系统级专家会诊，使用各种不同的工具采集不同数据，由专家综合各方面信息结合专业知识得出定位结果，定位过程耗时耗力。openEuler gopher是采用eBPF技术的一款结合专家经验的数据采集器，其默认会采集系统内大部分影响应用性能的大部分性能类、异常类数据，比如I/O时延、TCP RTT/重传、off-cpu、内存等等。其采集粒度达到进程/线程粒度，采集数据可以通过prometheus exporter上送至prometheus。

应用范围：推荐mysql、memcache、Redis。（参赛者也可以选取一款自己熟悉的，且比较普及的开源软件
应用卡顿故障类型：网络类（丢包、时延、重传、乱序等）、磁盘I/O（时延、IO带宽等）、CPU（负载等）几类故障（包括但不局限，问题类型越多，评分越高）
特征向量：应用类型、应用负载（QPS/TPMC等）、故障类型、故障注入方法、特征向量（普罗内的KPI、特征向量系数（比如相关性）
验证方法：对系统进行故障注入，并对相关指标进行异常检测，相关性top5的指标可正确检测出异常事件即为合格。
异常检测方法：3-sigma、vae模型（推荐）等。
异常事件判定：固定时间（<10min）内检测出3次异常即判定为1次异常事件。
产出内容：特征向量、验证报告
[可选]gopher新增/修改采集数据：参赛者在实现过程中识别出gopher采集数需新增/更新时，可以自己贡献代码至openEuler gopher项目[3]或者直接提交issue，由openEuler社区工程师评审后修改合入。

熟悉linux系统操作；
熟悉特征向量训练的常见AI算法；
熟悉应用（参见应用范围）性能测试方法；
熟悉故障注入方法[2]，包括网络故障注入、CPU压力注入、磁盘I/O时延故障注入等；